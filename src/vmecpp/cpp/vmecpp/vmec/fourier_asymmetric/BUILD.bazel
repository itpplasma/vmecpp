# SPDX-FileCopyrightText: 2024-present Proxima Fusion GmbH <info@proximafusion.com>
#
# SPDX-License-Identifier: MIT
cc_library(
    name = "fourier_asymmetric",
    srcs = ["fourier_asymmetric.cc"],
    hdrs = ["fourier_asymmetric.h"],
    visibility = ["//visibility:public"],
    deps = [
        "//vmecpp/common/sizes:sizes",
        "//vmecpp/common/fourier_basis_fast_poloidal:fourier_basis_fast_poloidal",
        "@abseil-cpp//absl/types:span",
    ],
)

cc_test(
    name = "fourier_asymmetric_test",
    srcs = ["fourier_asymmetric_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
    ],
    size = "small",
)

cc_test(
    name = "stellarator_asymmetric_test",
    srcs = ["stellarator_asymmetric_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "//vmecpp/vmec/fourier_geometry:fourier_geometry",
        "//vmecpp/vmec/output_quantities:output_quantities",
        "//util/file_io:file_io",
        "@nlohmann_json//:json",
        "@abseil-cpp//absl/log:check",
    ],
    size = "large",
    data = [
        "//vmecpp/test_data:cth_like_fixed_bdy",
    ],
)

cc_test(
    name = "debug_asymmetric_test",
    srcs = ["debug_asymmetric_test.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "//vmecpp/vmec/fourier_geometry:fourier_geometry",
        "//vmecpp/vmec/radial_partitioning:radial_partitioning",
        "//util/file_io:file_io",
    ],
    size = "small",
    data = [
        "//vmecpp/test_data:cth_like_fixed_bdy",
    ],
)

cc_test(
    name = "minimal_debug_test",
    srcs = ["minimal_debug_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
    ],
    size = "small",
)

cc_test(
    name = "up_down_asymmetric_test",
    srcs = ["up_down_asymmetric_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "//vmecpp/vmec/fourier_geometry:fourier_geometry",
        "//vmecpp/vmec/output_quantities:output_quantities",
        "@nlohmann_json//:json",
        "@abseil-cpp//absl/log:check",
    ],
    size = "large",
)

cc_test(
    name = "simple_2d_asymmetric_test",
    srcs = ["simple_2d_asymmetric_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
    ],
    size = "small",
)

cc_binary(
    name = "test_nan",
    srcs = ["test_nan.cc"],
    deps = [
        ":fourier_asymmetric",
        "//vmecpp/common/fourier_basis_fast_poloidal:fourier_basis_fast_poloidal",
        "//vmecpp/common/sizes:sizes",
    ],
)

cc_binary(
    name = "debug_nan_test",
    srcs = ["debug_nan_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "//vmecpp/common/fourier_basis_fast_poloidal:fourier_basis_fast_poloidal",
        "//vmecpp/common/sizes:sizes",
        "@abseil-cpp//absl/types:span",
    ],
)

cc_binary(
    name = "vmecpp_crash_test",
    srcs = ["vmecpp_crash_test.cc"],
    deps = [
        "//vmecpp/vmec/vmec:vmec",
        "//util/file_io:file_io",
        "//vmecpp/common/vmec_indata:vmec_indata",
    ],
)

cc_test(
    name = "debug_corrected_transform_test",
    srcs = ["debug_corrected_transform_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
        "//vmecpp/common/fourier_basis_fast_poloidal:fourier_basis_fast_poloidal",
        "@abseil-cpp//absl/types:span",
    ],
    size = "small",
)

cc_test(
    name = "compare_implementations_test",
    srcs = ["compare_implementations_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
        "@abseil-cpp//absl/types:span",
    ],
    size = "small",
)

cc_test(
    name = "small_asymmetric_tokamak_test",
    srcs = ["small_asymmetric_tokamak_test.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "@nlohmann_json//:json",
    ],
    size = "large",
)

cc_test(
    name = "test_convergence_sensitivity",
    srcs = ["test_convergence_sensitivity.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
    ],
    size = "large",
)

cc_test(
    name = "test_debug_output_comparison",
    srcs = ["test_debug_output_comparison.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "//vmecpp/common/vmec_indata:boundary_from_json",
    ],
    size = "large",
)

cc_test(
    name = "asymmetric_debug_comparison",
    srcs = ["asymmetric_debug_comparison.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
    ],
    size = "small",
)

cc_test(
    name = "detailed_jvmec_comparison",
    srcs = ["detailed_jvmec_comparison.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
        "@abseil-cpp//absl/types:span",
    ],
    size = "small",
)

cc_test(
    name = "roundtrip_test",
    srcs = ["roundtrip_test.cc"],
    deps = [
        ":fourier_asymmetric",
        "@googletest//:gtest_main",
        "//vmecpp/common/sizes:sizes",
        "@abseil-cpp//absl/types:span",
    ],
    size = "small",
)

cc_test(
    name = "converging_asymmetric_test",
    srcs = ["converging_asymmetric_test.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "@nlohmann_json//:json",
    ],
    size = "large",
)

cc_test(
    name = "microscopic_jvmec_debug",
    srcs = ["microscopic_jvmec_debug.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "@nlohmann_json//:json",
    ],
    size = "large",
)

cc_test(
    name = "detailed_jvmec_step_comparison",
    srcs = ["detailed_jvmec_step_comparison.cc"],
    deps = [
        "@googletest//:gtest_main",
        "//vmecpp/vmec/vmec:vmec",
        "//vmecpp/common/vmec_indata:vmec_indata",
        "@nlohmann_json//:json",
    ],
    size = "large",
)
